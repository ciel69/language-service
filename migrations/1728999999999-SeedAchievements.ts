import { MigrationInterface, QueryRunner } from 'typeorm';

export class SeedAchievements1728999999999 implements MigrationInterface {
  name = 'SeedAchievements1728999999999';

  public async up(queryRunner: QueryRunner): Promise<void> {
    const achievements = [
      // üëá –ù–û–í–ê–Ø –ê–ß–ò–í–ö–ê ‚Äî –ü–†–û–°–¢–ê–Ø –ò –ö–õ–Æ–ß–ï–í–ê–Ø!
      {
        title: '–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫',
        description: '–í—ã –ø—Ä–æ—à–ª–∏ –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫ ‚Äî –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!',
        icon: 'rocket-launch', // Heroicons outline: https://heroicons.com/
        category: 'learning',
        points: 25,
        condition: { type: 'lesson_completed', value: 1 },
        is_hidden: false, // üëà –í–ò–î–ò–ú–û ‚Äî —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –±—ã–ª–æ –≤–∏–¥–Ω–æ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
      },

      {
        title: '–ü–µ—Ä–≤—ã–π —à–∞–≥',
        description: '–í—ã—É—á–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ!',
        icon: 'book-open',
        category: 'learning',
        points: 10,
        condition: { type: 'first_word', value: 1 },
        is_hidden: true,
      },
      {
        title: '–°–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å',
        description: '–í—ã—É—á–∏—Ç–µ 10 —Å–ª–æ–≤!',
        icon: 'document-text',
        category: 'learning',
        points: 50,
        condition: { type: 'words_learned', value: 10 },
        is_hidden: false,
      },
      {
        title: '–ú–∞—Å—Ç–µ—Ä —Å–ª–æ–≤',
        description: '–í—ã—É—á–∏—Ç–µ 50 —Å–ª–æ–≤!',
        icon: 'star',
        category: 'learning',
        points: 150,
        condition: { type: 'words_learned', value: 50 },
        is_hidden: false,
      },
      {
        title: '–ü—è—Ç—å —É—Ä–æ–∫–æ–≤ –ø–æ–¥—Ä—è–¥',
        description: '–ü—Ä–æ–π–¥–∏—Ç–µ 5 —É—Ä–æ–∫–æ–≤ –∑–∞ –æ–¥–∏–Ω –¥–µ–Ω—å!',
        icon: 'clipboard-check',
        category: 'streak',
        points: 75,
        condition: { type: 'lesson_completed', value: 5 },
        is_hidden: false,
      },
      {
        title: '–ù–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–æ–π–∫–æ—Å—Ç—å',
        description: '–ó–∞–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥!',
        icon: 'clock',
        category: 'streak',
        points: 200,
        condition: { type: 'streak_days', value: 7 },
        is_hidden: false,
      },
      {
        title: '–ö–∞–Ω–∞-–º–∞—Å—Ç–µ—Ä',
        description: '–û—Å–≤–æ–π—Ç–µ –≤—Å–µ 46 –∫–∞–Ω–∞ —É—Ä–æ–≤–Ω—è N5!',
        icon: 'alphabet',
        category: 'expert',
        points: 300,
        condition: { type: 'kana_mastered', value: 46 },
        is_hidden: false,
      },
      {
        title: '–î–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
        description: '–ù–∞–±–µ—Ä–∏—Ç–µ 100 –æ—á–∫–æ–≤ –∑–∞ –¥–µ–Ω—å!',
        icon: 'fire',
        category: 'bonus',
        points: 100,
        condition: { type: 'daily_points', value: 100 },
        is_hidden: false,
      },
      {
        title: '–ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π',
        description: '–ò–∑—É—á–∏—Ç–µ 10 –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∞–≤–∏–ª!',
        icon: 'adjustments-horizontal',
        category: 'expert',
        points: 250,
        condition: { type: 'grammar_mastered', value: 10 },
        is_hidden: false,
      },
    ];

    // –ü—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —É–∂–µ –µ—Å—Ç—å
    const existingTitles = await queryRunner.query(
      `
        SELECT "title" FROM "achievement" WHERE "title" IN ($1)
      `,
      [achievements.map((a) => a.title)],
    );

    const titlesToInsert = achievements.filter(
      (ach) => !existingTitles.some((e) => e.title === ach.title),
    );

    if (titlesToInsert.length === 0) {
      console.log('‚ÑπÔ∏è –í—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å—Ç–∞–≤–∫—É.');
      return;
    }

    // –í—Å—Ç–∞–≤–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Heroicons –∏–∫–æ–Ω–æ–∫
    await queryRunner.query(
      `
        INSERT INTO "achievement" (
          "title", "description", "icon", "category", "points", "condition", "is_hidden", "created_at", "updated_at"
        ) VALUES
          ${titlesToInsert
            .map((ach) => {
              return `(
                '${this.escapeString(ach.title)}',
                '${this.escapeString(ach.description)}',
                '${ach.icon}',
                '${ach.category}',
                ${ach.points},
                '${JSON.stringify(ach.condition).replace(/'/g, "''")}',
                ${ach.is_hidden ? 'true' : 'false'},
                NOW(),
                NOW()
              )`;
            })
            .join(',\n')}`,
    );

    console.log(`‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω–æ ${titlesToInsert.length} –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.`);
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`DELETE FROM "achievement" WHERE "title" IN (
                                                                         '–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫',
                                                                         '–ü–µ—Ä–≤—ã–π —à–∞–≥',
                                                                         '–°–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å',
                                                                         '–ú–∞—Å—Ç–µ—Ä —Å–ª–æ–≤',
                                                                         '–ü—è—Ç—å —É—Ä–æ–∫–æ–≤ –ø–æ–¥—Ä—è–¥',
                                                                         '–ù–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–æ–π–∫–æ—Å—Ç—å',
                                                                         '–ö–∞–Ω–∞-–º–∞—Å—Ç–µ—Ä',
                                                                         '–î–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
                                                                         '–ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π'
      );`);

    console.log('‚ùå –£–¥–∞–ª–µ–Ω—ã seed-–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.');
  }

  private escapeString(str: string): string {
    return str.replace(/'/g, "''");
  }
}
